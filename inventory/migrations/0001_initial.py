# Generated by Django 2.2.4 on 2019-11-17 02:51

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='No Campaign', max_length=265)),
                ('partnership', models.CharField(blank=True, max_length=265, null=True)),
                ('organization_recipient', models.CharField(blank=True, max_length=265, null=True)),
                ('region', models.CharField(max_length=265)),
                ('country', models.CharField(max_length=265)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DonationHouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=265)),
                ('street', models.CharField(max_length=265)),
                ('city', models.CharField(max_length=265)),
                ('state', models.CharField(max_length=2)),
                ('zip', models.IntegerField(validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.URLField(max_length=300)),
                ('device_type', models.CharField(choices=[('cane', 'cane'), ('cane, quad', 'cane, quad'), ('commode', 'commode'), ('compression brace', 'compression brace'), ('crutch, adult', 'crutch, adult'), ('crutch, pediatric', 'crutch, pediatric'), ('forearm crutch, adult', 'forearm crutch, adult'), ('forearm crutch, pediatric', 'forearm crutch, pediatric'), ('knee injury scooter', 'knee injury scooter'), ('medical boot, adult', 'medical boot adult'), ('medical boot, pediatric', 'medical boot, pediatric'), ('miscellaneous', 'miscellaneous'), ('orthotic brace, adult', 'orthotic brace adult'), ('orthotic brace, pediatric', 'orthotic brace, pediatric'), ('orthotic shoe, adult', 'orthotic shoe, adult'), ('orthotic shoe, pediatric', 'orthotic shoe, pediatric'), ('shower chair, tub-attachable', 'shower chair, tub-attachable'), ('showerchair', 'shower chair'), ('sling', 'sling'), ('splint', 'splint'), ('splint', 'wrist splint'), ('walker, four-wheeled', 'walker, four-wheeled'), ('walker, non-wheeled', 'walker, non-wheeled'), ('walker, three-wheeled', 'walker, three-wheeled'), ('walker, two-wheeled', 'walker, two-wheeled'), ('wheelchair, active-manual', 'wheelchair, active-manual'), ('wheelchair, pediatric', 'wheelchair, pediatric'), ('wheelchair, seat cushion', 'wheelchair, seat cushion'), ('wheelchair, standard', 'wheelchair, standard')], max_length=25)),
                ('source_value', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='StorageArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=265)),
                ('street', models.CharField(max_length=265)),
                ('city', models.CharField(max_length=265)),
                ('state', models.CharField(max_length=2)),
                ('zip', models.IntegerField(validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='Recipient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=265)),
                ('age', models.IntegerField(blank=True, validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(1)])),
                ('type', models.CharField(blank=True, choices=[('MAN', 'man'), ('WOMAN', 'woman'), ('BOY', 'boy'), ('GIRL', 'girl'), ('Non-Binary', 'non_binary')], max_length=13)),
                ('date_recieved', models.DateField(blank=True)),
                ('campaign', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, related_name='campaign', to='inventory.Campaign')),
            ],
        ),
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=265)),
                ('email', models.EmailField(max_length=265)),
                ('region', models.CharField(max_length=265)),
                ('country', models.CharField(max_length=265)),
                ('donation_date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('sent_a_receipt', models.BooleanField(default=False)),
                ('donation_house', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, related_name='dono_house', to='inventory.DonationHouse')),
            ],
            options={
                'ordering': ('donation_date',),
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('cane', 'cane'), ('cane, quad', 'cane, quad'), ('commode', 'commode'), ('compression brace', 'compression brace'), ('crutch, adult', 'crutch, adult'), ('crutch, pediatric', 'crutch, pediatric'), ('forearm crutch, adult', 'forearm crutch, adult'), ('forearm crutch, pediatric', 'forearm crutch, pediatric'), ('knee injury scooter', 'knee injury scooter'), ('medical boot, adult', 'medical boot adult'), ('medical boot, pediatric', 'medical boot, pediatric'), ('miscellaneous', 'miscellaneous'), ('orthotic brace, adult', 'orthotic brace adult'), ('orthotic brace, pediatric', 'orthotic brace, pediatric'), ('orthotic shoe, adult', 'orthotic shoe, adult'), ('orthotic shoe, pediatric', 'orthotic shoe, pediatric'), ('shower chair, tub-attachable', 'shower chair, tub-attachable'), ('showerchair', 'shower chair'), ('sling', 'sling'), ('splint', 'splint'), ('splint', 'wrist splint'), ('walker, four-wheeled', 'walker, four-wheeled'), ('walker, non-wheeled', 'walker, non-wheeled'), ('walker, three-wheeled', 'walker, three-wheeled'), ('walker, two-wheeled', 'walker, two-wheeled'), ('wheelchair, active-manual', 'wheelchair, active-manual'), ('wheelchair, pediatric', 'wheelchair, pediatric'), ('wheelchair, seat cushion', 'wheelchair, seat cushion'), ('wheelchair, standard', 'wheelchair, standard')], max_length=47)),
                ('condition', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('BROKEN', 'Broken')], max_length=10)),
                ('donated_to_recipient', models.BooleanField(default=False)),
                ('processed', models.BooleanField(default=False)),
                ('storage_unit', models.IntegerField(validators=[django.core.validators.MaxValueValidator(9999), django.core.validators.MinValueValidator(1)])),
                ('storage_unit_quadrant', models.CharField(max_length=6)),
                ('unique_information', models.TextField(default='None')),
                ('date_donated_to_project_embrace', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('date_donated_to_recipient', models.DateField(blank=True, null=True, verbose_name='Date Donated to Recipient (YYYY-MM-DD)')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_campaign', to='inventory.Campaign')),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='inventory.Donor')),
                ('storage_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_storage_area', to='inventory.StorageArea')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
    ]
